/*
 * The MIT License
 *
 * (MIT)Copyright (c) 2015 artjomb
 */
!function(a,b,c){"function"==typeof define&&define.amd?define(["crypto-js/core","crypto-js/cipher-core"],b):b(a.CryptoJS)}(this,function(a){function b(a,b,c){var d,h,i,j=this,k=j._cipher,l=32*k.blockSize,m=j._prevBlock,n=k.cfg.segmentSize,o=[];for(d=31;d<n;d+=32)o.push(4294967295);for(o.push((1<<n)-1<<32-n),d=o.length;d<a.length;d++)o.push(0);o=new e.init(o);var p,q=o.clone(),r=q.clone();for(f(r,32*-b),d=0;d<l/n;d++){if(m){for(m=new e.init(m),f(m,n),m=m.words,previousCiphertextSegment=j._ct;previousCiphertextSegment.length<l/32;)previousCiphertextSegment.push(0);previousCiphertextSegment=new e.init(previousCiphertextSegment),f(previousCiphertextSegment,-l+n);for(var h=0;h<m.length;h++)m[h]|=previousCiphertextSegment.words[h]}else m=j._iv.slice(0),j._iv=void 0;i=32*b+d*n;var s=new e.init(a.slice(0));f(s,i),c||(j._ct=s.words.slice(0,Math.ceil(n/32)));var t=m.slice(0);for(k.encryptBlock(t,0),h=0;h<Math.ceil(n/32);h++)s.words[h]^=t[h];for(h=0;h<s.words.length;h++)s.words[h]&=o.words[h];for(c&&(j._ct=s.words.slice(0,Math.ceil(n/32))),p=g(r.clone()),h=0;h<a.length;h++)a[h]&=p.words[h];for(f(s,-i),h=0;h<a.length;h++)a[h]|=s.words[h];f(q,-n),f(r,-n)}j._prevBlock=m}var c;c=a.hasOwnProperty("ext")?a.ext:a.ext={},c.bitshift=function(a,b){var c,d,e=0,f=a.words,g=0;if(b>0){for(;b>31;)f.splice(0,1),f.push(0),b-=32,g++;if(0==b)return e;for(var h=f.length-g-1;h>=0;h--)c=f[h],f[h]<<=b,f[h]|=e,e=c>>>32-b}else if(b<0){for(;b<-31;)f.splice(0,0,0),f.length--,b+=32,g++;if(0==b)return e;b=-b,d=(1<<b)-1;for(var h=g;h<f.length;h++)c=f[h]&d,f[h]>>>=b,f[h]|=e,e=c<<32-b}return e},c.neg=function(a){for(var b=a.words,c=0;c<b.length;c++)b[c]=~b[c];return a},c.xor=function(a,b){for(var c=0;c<a.words.length;c++)a.words[c]^=b.words[c];return a},c.bitand=function(a,b){for(var c=a.clone(),d=c.words,e=b.words,f=0;f<d.length;f++)d[f]&=e[f];return c};var d=a.lib.BlockCipherMode.extend(),e=a.lib.WordArray,f=a.ext.bitshift,g=a.ext.neg;d.Encryptor=d.extend({processBlock:function(a,c){b.call(this,a,c,!0)}}),d.Decryptor=d.extend({processBlock:function(a,c){b.call(this,a,c,!1)}}),a.mode.CFBb=d});